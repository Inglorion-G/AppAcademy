Ch 3

3.1
What is a database connection and how long is it held?

  Database connection is a link between your application and the database you are accessing.     It is held until the application releases the connection or you quit. It is assigned an ID.
	It checks if you have permission to execute the statement, access to the data, and correct     syntax.

What is the query optimizer?

  A program that accepts your query, then comes up with the most efficient way of querying   	 	 that data... e.g. the order in which to join tables, what indexes are available. Comes up   	 with an execution plan.

3.2
Be able to describe the purpose of the SELECT, FROM, WHERE, GROUP BY, HAVING and ORDER BY clauses. Don't worry about memorizing the definitions in this section now, but you should have internalized them by the time you've finished this chapter.

  SELECT -- determines which of all possible columns should be included in your query's 	results set.
	
	FROM -- determines the tables used by a query, along with the means that they will be   	linked together (joins).
	
	WHERE -- determines what rows you want to access from the columns that you SELECTED and the 	tables you are drawing FROM.
	
	


3.3
How do you add column aliases to a SELECT clause?
  You define them by typing in aliases right after the name of the column that you are 		selecting in the SELECT statement.

How do you remove duplicates from a SELECT clause?
  Use the DISTINCT keyword.

Why does this make the query slower?
  It has to check agains the other tables (because they are linked relationally) to see if 		there are multiple references to one id.


3.4
What is a subquery?
  It's a query contained within another query -> SELECT this (SELECT that from this)

What does a subquery generate (or return)?
  A temporary table that is visible from all other query clauses and can interact with other 		tables named in the FROM clause.

What is a view?
  A view is a query that is stored in the data-dictionary (wtf ever that is). It has no data 		associated with it. When you query against a view, your query is merged with the view 		definition to create a final query to be executed.
	
How do you create an alias for a table?
  In the FROM clause you give a one-letter alias to a table by definiting it right after the 		full table name --> FROM employee e INNER JOIN department d.

3.5
Know how to write simple WHERE clauses with multiple filter conditions. Know how to group conditions with parentheses.

  WHERE clauses are the filters that will take out specific rows based on what you are 		searching for. You can use 'and' 'or' or 'not'.

3.7
How do you order on multiple columns (i.e., first on one column, then on another)?
  The order that you specify columns in the ORDER BY keyword is how you will establish the 		order of your output.

What is the default sorting order, and how do you flip it?
  Ascending order is the default, 'asc', and you can flip it with 'dsc'.
	
How do you sort via an expression?
  


Ch 4

4.1
Be familiar with the NOT operator.

  NOT is similar to != and it inverts the truthiness or falsiness of an expression.


4.3
Be familiar with the following types of conditions: equality/inequality, range (incl. the BETWEEN operator), membership (the IN operator, via subqueries, NOT IN)

  When using ranges you must specify the lower limit first and the upper limit second. Also     the ranges must be inclusive instead of exclusive.
	
	For string ranges you must know the order of characters within your character set, the   		collation.
	
	The IN operator allows you to filter based on inclusion is a specified set of things.
	IN ('condition', 'condition2', 'condition3').

Skip Section 4.3.4.1 (Wildcards).

Know how to use regex in a search expression.


4.4
How do you test if an expression is NULL?

  IS null?
	
How do you test if a value has been assigned to a column?


Ch 5

5.1
What is a cross join and how is it generated?

  Cross joins are the cartesian product - every permutation of the tables queried. That means   every element from table one added to every element of table 2 in all possible   		permutations. It's generated by calling JOIN with no ON statement.

What is an inner join and how is it generated?

  An inner join will return a results table with the common elements from the first table and 	the second table, as denoted by the foreign key. If the foreign key value exists for one  	table but not the other, it is dropped.

What is the default type of join?

  Cross Join

Skip 5.1.3 (ANSI Join Syntax)


5.2
Know how to inner join 3 (or more) tables. Know how to inner join to the same table multiple times.

  You chain the JOIN statements between intermediate returned sets. Snowball analogy. First 	you generate one return table, then you call a JOIN on that, and so forth.
	
	SELECT some columns
	FROM some table and INNER JOIN some other columns from another table
	  ON foreign key = foreign key
		INNER JOIN another table
		ON another foreign key = foreign key
	WHERE filter condition

5.3
What is a self-referencing foreign key?

  A self-referencing foreign key means that a table includes a column that points to the 		primary key within the same table.

How do you inner join a table to itself?

  You can join a table to itself by using the self-referencing foreign key in the INNER JOIN 	 clause.


5.4
How do you inner join a table to another on a range of values instead of on an equality condition? How do you do that for a self-join?

  You use ON and AND to make a range of values instead of an equi-join.


5.5
As you know, join conditions belong in the ON clause and filter conditions belong in the WHERE clause. What happens if you put a join condition in the WHERE clause and/or a filter condition in an ON clause?

  They return the same results tables!


SQL FAQ

Q: Isn't a CROSS JOIN the same as a regular JOIN without the ON clause?

A: Yup! But Nota Bene some SQL implementations always require an ON clause for regular JOIN.

Q: How do you make comments in SQL? It doesn't seem to respect the #.

A: You can use /* Your comments go Here */

Q: The MySQL conversion command 'YEAR(start_date) start_year' doesn't seem to work in Postgres. I get an error saying 'You might need to add explicit type casts'. Is this a problem with my system or is the syntax different for Postgres?

A: You can use the EXTRACT function. In this instance, you would use 'EXTRACT(YEAR FROM start_date) start_year'